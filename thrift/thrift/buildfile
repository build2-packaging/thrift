import! byacc = byacc%exe{byacc}
import! reflex = reflex%exe{reflex}

compiler_core =\
  src/thrift/common.cc \
  src/thrift/parse/t_typedef.cc \
  src/thrift/parse/parse.cc \

compiler_source =\
  src/thrift/main.cc \
  src/thrift/audit/t_audit.cpp

libul{parse}: hxx{thrifty} cxx{thrifty thriftl}

# NOTE: 0.16.0 fails on MSVC with C++20
##      See: https://github.com/apache/thrift/pull/2543
./: exe{thrift}: hxx{src/thrift/**} cxx{$compiler_core $compiler_source src/thrift/generate/*} \
  libul{parse} testscript
testscript{*}: version = "$(version.major).$(version.minor).$(version.patch)"

# Generate thrifty.h & thrifty.cc
<{hxx cxx}{thrifty}>: file{src/thrift/thrifty.yy} $byacc
{{
  diag byacc -l -y "--defines=$path($>[0])" -o $path($>[0]) $path($<[0])
  $byacc -l -y "--defines=$path($>[0])" -o $path($>[1]) $path($<[0])
}}

# Generate thriftl.cc
cxx{thriftl}: file{src/thrift/thriftl.ll} $reflex
{{
  diag reflex -L -o $path($>) $path($<[0])
  $reflex -L -o $path($>) $path($<[0])
}}

switch $cxx.target.class, $cxx.target.system
{
  case 'windows', 'mingw32'
    sys_libs += -lole32
  case 'windows'
    sys_libs += ole32.lib
}

cxx.libs += $sys_libs
cxx.poptions =+ "-I$out_root" "-I$src_base/src" -DBISON_USE_PARSER_H_EXTENSION
